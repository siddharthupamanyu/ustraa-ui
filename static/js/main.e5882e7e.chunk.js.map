{"version":3,"sources":["Environment/Environment.js","Categories/ProductList.js","Categories/Footer.js","Categories/CategoriesTabs.js","App.js","serviceWorker.js","index.js"],"names":["BaseAddress","ColorButton","withStyles","theme","root","color","palette","getContrastText","backgroundColor","Button","useStyles","makeStyles","card","display","margins","paddingBottom","details","flexDirection","content","flex","cardMedia","height","maxWidth","button","marginTop","borderRadius","rating","position","right","top","starIcon","fontSize","price","textDecoration","paddingTop","paddingLeft","ProductList","props","classes","data","name","img","image_urls","weight","unit","weight_unit","fp","final_price","iis","is_in_stock","Card","className","CardMedia","component","alt","image","x120","CardContent","Typography","variant","Grid","container","inline","disabled","disableElevation","textTransform","flexGrow","background","paper","width","Footer","React","useState","anchorEl","open","value","state","setState","Fragment","ButtonGroup","onClick","event","getAnchor","currentTarget","changeString","Popper","Tabs","orientation","onChange","newValue","changeCategory","category","map","Tab","key","category_id","id","label","category_name","changeView","viewString","tabs","CategoriesTabs","isLess","selectString","handleChange","a","async","categoryId","categoryName","target","innerText","fetch","json","then","useEffect","Object","entries","length","product_list","category_list","indicatorColor","textColor","scrollButtons","products","slice","newView","newString","App","response","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5882e7e.chunk.js","sourcesContent":["export const BaseAddress = \"https://backend.ustraa.com/rest/V1/api\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst ColorButton = withStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(\"#73da4d\"),\r\n    backgroundColor: \"#73da4d\"\r\n  }\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    display: \"flex\"\r\n  },\r\n  margins: {\r\n    paddingBottom: 10\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\"\r\n  },\r\n  cardMedia: {\r\n    height: 120,\r\n    maxWidth: 120\r\n  },\r\n  button: {\r\n    display: \"block\",\r\n    marginTop: 5,\r\n    color: \"white\",\r\n    borderRadius: 0\r\n  },\r\n  rating: {\r\n    color: \"#9e9e9e\",\r\n    position: \"inherit\",\r\n    right: 0,\r\n    top: 5\r\n  },\r\n  starIcon: {\r\n    fontSize: 14\r\n  },\r\n  price: {\r\n    textDecoration: \"line-through\",\r\n    paddingTop: 7,\r\n    paddingLeft: 5\r\n  }\r\n}));\r\n\r\nexport default function ProductList(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    name,\r\n    image_urls: img,\r\n    weight,\r\n    weight_unit: unit,\r\n    price,\r\n    final_price: fp,\r\n    rating,\r\n    is_in_stock: iis,\r\n    ...other\r\n  } = props.data;\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia\r\n        className={classes.cardMedia}\r\n        component=\"img\"\r\n        alt=\"Image not Available\"\r\n        height=\"140\"\r\n        image={img.x120}\r\n      />\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Typography variant=\"subtitle1\" component=\"h2\">\r\n            {name}\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n            {rating ? rating : 0}\r\n            <StarIcon className={classes.starIcon} />\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"textSecondary\">\r\n            {weight ? `(${weight} ${unit})` : \"\"}\r\n          </Typography>\r\n          <Grid container>\r\n            <Typography inline=\"true\" variant=\"h6\">\r\n              {`₹ ${fp}`}\r\n            </Typography>\r\n            <Typography\r\n              inline=\"true\"\r\n              className={classes.price}\r\n              variant=\"subtitle2\"\r\n              color=\"textSecondary\"\r\n            >\r\n              {`₹ ${price}`}\r\n            </Typography>\r\n          </Grid>\r\n          <ColorButton\r\n            className={classes.button}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={iis ? false : true}\r\n            disableElevation\r\n          >\r\n            {iis ? \"ADD TO CART\" : \"OUT OF STOCK\"}\r\n          </ColorButton>\r\n        </CardContent>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nProductList.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  key: PropTypes.number.isRequired\r\n}","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport { Tabs, Tab } from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    textTransform: \"none\"\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    height: 300,\r\n    width: 150\r\n  }\r\n}));\r\n\r\nexport default function Footer(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    anchorEl: null,\r\n    open: false,\r\n    value: 0\r\n  });\r\n\r\n  const changeCategory = event => {\r\n    const getAnchor = state.anchorEl ? null : event.currentTarget;\r\n    setState({ ...state, anchorEl: getAnchor, open: true });\r\n  };\r\n\r\n  const handleClick = () => {\r\n    props.changeView();\r\n  };\r\n\r\n  const handleChange = (event, newValue) => {\r\n    props.changeCategory(event, newValue);\r\n    setState({ ...state, open: false, value: newValue });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ButtonGroup variant=\"text\">\r\n        <Button onClick={changeCategory} className={classes.button}>\r\n          {`Showing for ${props.changeString}       change`}\r\n        </Button>\r\n        <Popper open={state.open} anchorEl={state.anchorEl}>\r\n          <div className={classes.root}>\r\n            <Tabs\r\n              orientation=\"vertical\"\r\n              variant=\"scrollable\"\r\n              onChange={handleChange}\r\n              value={state.value}\r\n            >\r\n              {props.category\r\n                ? props.category.map(value => {\r\n                    return (\r\n                      <Tab\r\n                        key={value.category_id}\r\n                        id={value.category_id}\r\n                        label={value.category_name}\r\n                      />\r\n                    );\r\n                  })\r\n                : \"\"}\r\n            </Tabs>\r\n          </div>\r\n        </Popper>\r\n        <Button onClick={handleClick} className={classes.button}>\r\n          {props.viewString}\r\n        </Button>\r\n      </ButtonGroup>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nFooter.propTypes = {\r\n  changeString: PropTypes.string.isRequired,\r\n  viewString: PropTypes.string.isRequired,\r\n  changeView: PropTypes.func.isRequired,\r\n  changeCategory: PropTypes.func.isRequired,\r\n  category: PropTypes.array.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport ProductList from \"./ProductList\";\r\nimport Footer from \"./Footer\";\r\nimport { BaseAddress } from \"../Environment/Environment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  tabs: {\r\n    borderRadius: 10\r\n  }\r\n}));\r\n\r\nexport default function CategoriesTabs(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    data: {},\r\n    value: 0,\r\n    isLess: true,\r\n    viewString: \"[+] View More\",\r\n    selectString: \"\"\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (Object.entries(props.data).length > 0) {\r\n      setState({\r\n        ...state,\r\n        data: props.data.product_list,\r\n        selectString: props.data.category_list[0].category_name\r\n      });\r\n    }\r\n  }, [Object.entries(props.data).length]);\r\n\r\n  async function handleChange(event, newValue) {\r\n    const categoryId = event.currentTarget.id;\r\n    const categoryName = event.target.innerText;\r\n    const response = await fetch(\r\n      `${BaseAddress}/catalog/v1.0.1?category_id=${categoryId}`\r\n    );\r\n    response.json().then(data => {\r\n      setState({\r\n        ...state,\r\n        data: data,\r\n        value: newValue,\r\n        isLess: true,\r\n        viewString: \"[+] View More\",\r\n        selectString: categoryName\r\n      });\r\n    });\r\n  }\r\n\r\n  const changeView = () => {\r\n    let newView = state.isLess ? false : true;\r\n    let newString = state.isLess ? \"[-] View Less\" : \"[+] View More\";\r\n    setState({ ...state, isLess: newView, viewString: newString });\r\n  };\r\n\r\n  const changeCategory = (event, newValue) => {\r\n    handleChange(event, newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tabs\r\n        value={state.value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        variant=\"scrollable\"\r\n        scrollButtons=\"auto\"\r\n      >\r\n        {props.data.category_list\r\n          ? props.data.category_list.map(value => {\r\n              return (\r\n                <Tab\r\n                  className={classes.tabs}\r\n                  key={value.category_id}\r\n                  id={value.category_id}\r\n                  label={value.category_name}\r\n                />\r\n              );\r\n            })\r\n          : \"\"}\r\n      </Tabs>\r\n      {state.data.products\r\n        ? state.isLess\r\n          ? state.data.products.slice(0, 3).map(value => {\r\n              return <ProductList data={value} key={value.id} />;\r\n            })\r\n          : state.data.products.map(value => {\r\n              return <ProductList data={value} key={value.id} />;\r\n            })\r\n        : \"\"}\r\n      <Footer\r\n        changeString={state.selectString}\r\n        viewString={state.viewString}\r\n        changeView={changeView}\r\n        changeCategory={changeCategory}\r\n        category={props.data.category_list}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nCategoriesTabs.propTypes = {\r\n  data: PropTypes.object.isRequired\r\n}","import React from \"react\";\nimport { BaseAddress } from \"./Environment/Environment\";\nimport CategoriesTabs from \"./Categories/CategoriesTabs\"\n\nfunction App() {\n  const [state, setState] = React.useState({});\n  React.useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(\n        `${BaseAddress}/homemenucategories/v1.0.1?device_type=mob`\n      );\n      response.json().then(response => {\n        setState(response);\n      });\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <CategoriesTabs data={state} />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}